# Path to your oh-my-zsh installation.
export ZSH=/home/ccota/.oh-my-zsh

# Look in ~/.oh-my-zsh/themes/
ZSH_THEME="avit"

# Enable command auto-correction.
ENABLE_CORRECTION="true"

if [ -f ~/.zsh_nocorrect ]; then
    while read -r COMMAND; do
        alias $COMMAND="nocorrect $COMMAND"
    done < ~/.zsh_nocorrect
fi

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Add / when autocomplete directories with Tab
zstyle ':completion:*' special-dirs true

# Prevent ZSH to print an error when no match can be found.
unsetopt nomatch

# Enabled plugins (plugins can be found in ~/.oh-my-zsh/plugins/*)
plugins=(git mvn virtualenvwrapper vagrant coffee python common-aliases history-substring-search.zsh z sudo nvm dirhistory docker jira web-search golang kubectl systemd)


# Path
PATH=/usr/local/go/bin:$PATH:/usr/java/latest/bin:$HOME/cmus-2.7.1/bin:$HOME/miniconda2/bin

# Preferred editor for local and remote sessions
export EDITOR='nvim'

# Custom aliases
alias vim='nvim'
alias vimdiff="nvim -d"
alias zshconfig="nvim ~/.zshrc"
alias ohmyzsh="nvim ~/.oh-my-zsh"
alias vimconfig='nvim ~/.vimrc'
alias nvimconfig='nvim ~/.config/nvim/init.vim'
alias tmuxconfig='nvim ~/.tmux.conf'
alias yum='dnf'
alias rmfailmvndonloads='find ~/.m2  -name "*.lastUpdated" -exec grep -q "Could not transfer" {} \; -print -exec rm {} \;'
alias rmmvnsnapshot='find ~/.m2/repository -name \*SNAPSHOT -type d -print0 | xargs -0 rm -rf'
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias tcpdumpall="sudo tcpdump -nnASs 0"

# Dev Helpers functions
karma_debug () {
	karma start $1 --browsers=Chrome --single-run=false --debug
}
alias karmadebug=karma_debug

mvn_test_smoke_debug () {
	mvn -Dmaven.surefire.debug integration-test -Pautomation,smoke -Dspring.profiles.active=DEFAULT_USER -Dtest=$1
}
alias mvntestsmokedebug=mvn_test_smoke_debug

# NVM environment
export NVM_DIR="/home/ccota/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm

# Ruby version manager
[ -d "$HOME/.rvm/bin" ] && PATH="$PATH:$HOME/.rvm/bin"

# VirtualEnv configuration
if [[ -f /usr/bin/virtualenvwrapper.sh ]]; then
    export WORKON_HOME=~/Envs
    mkdir -p $WORKON_HOME
    source /usr/bin/virtualenvwrapper.sh
fi

source $ZSH/oh-my-zsh.sh

# activate envirius
[ -f ~/.envirius/nv ] && . ~/.envirius/nv

# Golang variables
DEFAULT_USER=$USER
export GOPATH=$HOME/projects/go-workdir
export PATH="$PATH:$GOPATH/bin"
export GOROOT=/usr/local/go

export VAGRANT_DEFAULT_PROVIDER=virtualbox

# FZF configuration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Display settings
export FZF_DEFAULT_OPTS='--inline-info -m --height 40% --border'
# Preview file and automatically selects the item if there's only one
export FZF_CTRL_T_OPTS="--select-1 --exit-0 --preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"
# Full command on preview window"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"
# uses tree command to show the entries of the directory
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

[ -f ~/.local_config ] && source ~/.local_config

# Start tmux on every shell login
if command -v tmux>/dev/null; then
  [[ ! $- != *i*  ]] && [ -z $TMUX ] && exec tmux attach
fi


[ -f ~/kube-ps1/kube-ps1.sh ] && source ~/kube-ps1/kube-ps1.sh && PROMPT='$(kube_ps1)'$PROMPT
